datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = env("PRISMA_CLIENT")
    output   = env("PRISMA_OUTPUT")
}

model Session {
    id              Int         @id
    account_id      Int
    character_id    Int
    world_id        Int
    channel_id      Int
    login_attempts  Int
    pin             String
    pin_attempts    Int
    pic             String
    pic_attempts    Int
    tos             Boolean
}

model Account {
    id              Int             @id @default(autoincrement())
    name            String          @unique
    password        String
    pin             String
    pic             String
    state           LoginState      @default(LOGGED_OUT)
    banned          Boolean         @default(false)
    tos             Boolean         @default(false)
    last_login      DateTime?
    gender          Int
}

enum LoginState {
    LOGGED_OUT
    TRANSITIONING
    LOGGED_IN
}

model World {
    id              Int             @id
    connected       Int
}

model Character {
    id              Int             @id @default(autoincrement())
    account_id      Int
    world_id        Int
    name            String          @unique
    level           Int             @default(1)
    exp             Int             @default(0)
    gacha_exp       Int             @default(0)
    str             Int             @default(4)
    dex             Int             @default(4)
    luk             Int             @default(4)
    int             Int             @default(4)
    hp              Int             @default(50)
    mp              Int             @default(5)
    max_hp          Int             @default(50)
    max_mp          Int             @default(5)
    mesos           Int             @default(0)
    job             Int
    skin_colour     Int
    gender          Int
    fame            Int             @default(0)
    hair            Int
    face            Int
    ap              Int             @default(0)
    sp              Int[]           @default([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    map             Int
    spawn_point     Int             @default(0)
    gm              Int             @default(0)
    party           Int?
    buddy_capacity  Int             @default(25)
    created_at      DateTime        @default(now())
    rank            Int             @default(0)
    rank_move       Int             @default(0)
    job_rank        Int             @default(0)
    job_rank_move   Int             @default(0)
    guild           Int?
    guild_rank      Int?
    slots           Int[]           @default([24, 24, 24, 24])
    items           Item[]
    equips          Equip[]
    skills          Skill[]
    keymaps         Keymap[]
}

model Item {
    id              Int             @id @default(autoincrement())
    item_id         Int
    character       Character       @relation(fields: [character_id], references: [id], onDelete: Cascade)
    character_id    Int
    inventory_type  InventoryType
    position        Int
    amount          Int
}

enum InventoryType {
    EQUIP
    USE
    SETUP
    ETC
    CASH
}

model Equip {
    id              Int             @id @default(autoincrement())
    item_id         Int
    character       Character       @relation(fields: [character_id], references: [id], onDelete: Cascade)
    character_id    Int
    position        Int
    amount          Int             @default(1)
    upgrade_slots   Int             @default(0)
    level           Int             @default(0)
    item_level      Int             @default(1)
    exp             Int             @default(0)
    str             Int             @default(0)
    dex             Int             @default(0)
    int             Int             @default(0)
    luk             Int             @default(0)
    hp              Int             @default(0)
    mp              Int             @default(0)
    w_atk           Int             @default(0)
    m_atk           Int             @default(0)
    w_def           Int             @default(0)
    m_def           Int             @default(0)
    acc             Int             @default(0)
    avoid           Int             @default(0)
    hands           Int             @default(0)
    speed           Int             @default(0)
    jump            Int             @default(0)
    locked          Int             @default(0)
    vicious         Int             @default(0)
}

model Keymap {
    id              Int             @id @default(autoincrement())
    character       Character       @relation(fields: [character_id], references: [id], onDelete: Cascade)
    character_id    Int
    key             Int
    type_           Int
    action          Int
}

model Skill {
    id              Int             @id @default(autoincrement())
    skill_id        Int
    character       Character       @relation(fields: [character_id], references: [id], onDelete: Cascade)
    character_id    Int
    level           Int
    mastery         Int
    expiration      Int
}